// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: services.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GRPCService.GRPCProto {

  /// <summary>Holder for reflection information generated from services.proto</summary>
  public static partial class ServicesReflection {

    #region Descriptor
    /// <summary>File descriptor for services.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServicesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5zZXJ2aWNlcy5wcm90bxIJR1JQQ1Byb3RvIhoKBVBhdGhzEhEKCWZpbGVQ",
            "YXRocxgBIAMoCSIUCgRQYXRoEgwKBHBhdGgYASABKAkiOAoERmlsZRIhCghm",
            "aWxlUGF0aBgBIAEoCzIPLkdSUENQcm90by5QYXRoEg0KBWJ5dGVzGAIgASgM",
            "IicKB1BkZkZpbGUSDQoFcGFnZXMYASADKAUSDQoFYnl0ZXMYAiABKAwiBwoF",
            "RW1wdHkiVgoHSm9iSW5mbxIrCglKb2JTdGF0dXMYASABKA4yGC5HUlBDUHJv",
            "dG8uRW51bUpvYlN0YXR1cxINCgVKb2JJZBgCIAEoCRIPCgdNZXNzYWdlGAMg",
            "ASgJIkYKEEpvYkluZm9XaXRoQnl0ZXMSIwoHam9iSW5mbxgBIAEoCzISLkdS",
            "UENQcm90by5Kb2JJbmZvEg0KBWJ5dGVzGAIgASgMIo8BCghGaWxlSW5mbxIp",
            "CghmaWxlVHlwZRgBIAEoDjIXLkdSUENQcm90by5FbnVtRmlsZVR5cGUSCwoD",
            "TUQ1GAIgASgJEhIKCkZpbGVMZW5ndGgYAyABKAMSDAoEUGF0aBgEIAEoCRIN",
            "CgVKb2JJZBgFIAEoCRIOCgZQYWdlTm8YBiABKAMSCgoCSWQYByABKAMiNwoO",
            "Q29tbW9uUmVzcG9uc2USDwoHaXNFcnJvchgBIAEoCBIUCgxFcnJvck1lc3Nh",
            "Z2UYAiABKAkiWgoeRGF0YWJhc2VDcmVhdGVGaWxlSW5mb1Jlc3BvbnNlEigK",
            "BWVycm9yGAEgASgLMhkuR1JQQ1Byb3RvLkNvbW1vblJlc3BvbnNlEg4KBmZp",
            "bGVJZBgCIAEoCSI/CgpJbWFnZXNJbmZvEg0KBUpvYklkGAEgASgJEhMKC0Zp",
            "cnN0UGFnZU5vGAIgASgDEg0KBUNvdW50GAMgASgDIhoKCVJlamVjdEpvYhIN",
            "CgVKb2JJZBgBIAEoCSIYCgdEb25lSm9iEg0KBUpvYklkGAEgASgJKj8KDUVu",
            "dW1Kb2JTdGF0dXMSCwoHRVhFQ1VURRAAEggKBERPTkUQARIJCgVFUlJPUhAC",
            "EgwKCFJFSkVDVEVEEAMqIgoMRW51bUZpbGVUeXBlEgkKBUltYWdlEAASBwoD",
            "UGRmEAEyngQKCERhdGFCYXNlEjkKDFNhdmVGaWxlSW5mbxITLkdSUENQcm90",
            "by5GaWxlSW5mbxoSLkdSUENQcm90by5Kb2JJbmZvIgASOwoORGVsZXRlRmls",
            "ZUluZm8SEy5HUlBDUHJvdG8uRmlsZUluZm8aEi5HUlBDUHJvdG8uSm9iSW5m",
            "byIAEj0KEVVwZGF0ZU9yQ3JlYXRlSm9iEhIuR1JQQ1Byb3RvLkpvYkluZm8a",
            "Ei5HUlBDUHJvdG8uSm9iSW5mbyIAEjYKCkdldEpvYkluZm8SEi5HUlBDUHJv",
            "dG8uSm9iSW5mbxoSLkdSUENQcm90by5Kb2JJbmZvIgASPAoNR2V0SW1hZ2Vz",
            "SW5mbxIVLkdSUENQcm90by5JbWFnZXNJbmZvGhIuR1JQQ1Byb3RvLkpvYklu",
            "Zm8iABI5Cg1EZWxldGVKb2JJbmZvEhIuR1JQQ1Byb3RvLkpvYkluZm8aEi5H",
            "UlBDUHJvdG8uSm9iSW5mbyIAEjgKDkdldEFsbEpvYkluZm9zEhAuR1JQQ1By",
            "b3RvLkVtcHR5GhIuR1JQQ1Byb3RvLkpvYkluZm8iABI5Cg1SZWplY3RKb2JD",
            "YWxsEhQuR1JQQ1Byb3RvLlJlamVjdEpvYhoQLkdSUENQcm90by5FbXB0eSIA",
            "EjUKC0RvbmVKb2JDYWxsEhIuR1JQQ1Byb3RvLkRvbmVKb2IaEC5HUlBDUHJv",
            "dG8uRW1wdHkiADK3AQoJUmVjb2duaXplEjgKDFJlY29nbml6ZVBkZhISLkdS",
            "UENQcm90by5QZGZGaWxlGhIuR1JQQ1Byb3RvLkpvYkluZm8iABI5Cg1SZWpl",
            "Y3RKb2JDYWxsEhQuR1JQQ1Byb3RvLlJlamVjdEpvYhoQLkdSUENQcm90by5F",
            "bXB0eSIAEjUKC0RvbmVKb2JDYWxsEhIuR1JQQ1Byb3RvLkRvbmVKb2IaEC5H",
            "UlBDUHJvdG8uRW1wdHkiADLaAQoKRmlsZVNlcnZlchIxCghTYXZlRmlsZRIP",
            "LkdSUENQcm90by5GaWxlGhIuR1JQQ1Byb3RvLkpvYkluZm8iABIwCgdHZXRG",
            "aWxlEg8uR1JQQ1Byb3RvLlBhdGgaEi5HUlBDUHJvdG8uSm9iSW5mbyIAEjIK",
            "CEdldEZpbGVzEhAuR1JQQ1Byb3RvLlBhdGhzGhIuR1JQQ1Byb3RvLkpvYklu",
            "Zm8iABIzCgpEZWxldGVGaWxlEg8uR1JQQ1Byb3RvLlBhdGgaEi5HUlBDUHJv",
            "dG8uSm9iSW5mbyIAMokBCgdHYXRlV2F5EjUKC1Bvc3RKb2JJbmZvEhIuR1JQ",
            "Q1Byb3RvLkpvYkluZm8aEC5HUlBDUHJvdG8uRW1wdHkiABJHChRQb3N0Sm9i",
            "SW5mb1dpdGhCeXRlcxIbLkdSUENQcm90by5Kb2JJbmZvV2l0aEJ5dGVzGhAu",
            "R1JQQ1Byb3RvLkVtcHR5IgBCGKoCFUdSUENTZXJ2aWNlLkdSUENQcm90b2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GRPCService.GRPCProto.EnumJobStatus), typeof(global::GRPCService.GRPCProto.EnumFileType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GRPCService.GRPCProto.Paths), global::GRPCService.GRPCProto.Paths.Parser, new[]{ "FilePaths" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GRPCService.GRPCProto.Path), global::GRPCService.GRPCProto.Path.Parser, new[]{ "Path_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GRPCService.GRPCProto.File), global::GRPCService.GRPCProto.File.Parser, new[]{ "FilePath", "Bytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GRPCService.GRPCProto.PdfFile), global::GRPCService.GRPCProto.PdfFile.Parser, new[]{ "Pages", "Bytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GRPCService.GRPCProto.Empty), global::GRPCService.GRPCProto.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GRPCService.GRPCProto.JobInfo), global::GRPCService.GRPCProto.JobInfo.Parser, new[]{ "JobStatus", "JobId", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GRPCService.GRPCProto.JobInfoWithBytes), global::GRPCService.GRPCProto.JobInfoWithBytes.Parser, new[]{ "JobInfo", "Bytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GRPCService.GRPCProto.FileInfo), global::GRPCService.GRPCProto.FileInfo.Parser, new[]{ "FileType", "MD5", "FileLength", "Path", "JobId", "PageNo", "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GRPCService.GRPCProto.CommonResponse), global::GRPCService.GRPCProto.CommonResponse.Parser, new[]{ "IsError", "ErrorMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GRPCService.GRPCProto.DatabaseCreateFileInfoResponse), global::GRPCService.GRPCProto.DatabaseCreateFileInfoResponse.Parser, new[]{ "Error", "FileId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GRPCService.GRPCProto.ImagesInfo), global::GRPCService.GRPCProto.ImagesInfo.Parser, new[]{ "JobId", "FirstPageNo", "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GRPCService.GRPCProto.RejectJob), global::GRPCService.GRPCProto.RejectJob.Parser, new[]{ "JobId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GRPCService.GRPCProto.DoneJob), global::GRPCService.GRPCProto.DoneJob.Parser, new[]{ "JobId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EnumJobStatus {
    [pbr::OriginalName("EXECUTE")] Execute = 0,
    [pbr::OriginalName("DONE")] Done = 1,
    [pbr::OriginalName("ERROR")] Error = 2,
    [pbr::OriginalName("REJECTED")] Rejected = 3,
  }

  public enum EnumFileType {
    [pbr::OriginalName("Image")] Image = 0,
    [pbr::OriginalName("Pdf")] Pdf = 1,
  }

  #endregion

  #region Messages
  public sealed partial class Paths : pb::IMessage<Paths> {
    private static readonly pb::MessageParser<Paths> _parser = new pb::MessageParser<Paths>(() => new Paths());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Paths> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Paths() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Paths(Paths other) : this() {
      filePaths_ = other.filePaths_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Paths Clone() {
      return new Paths(this);
    }

    /// <summary>Field number for the "filePaths" field.</summary>
    public const int FilePathsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_filePaths_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> filePaths_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FilePaths {
      get { return filePaths_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Paths);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Paths other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!filePaths_.Equals(other.filePaths_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= filePaths_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      filePaths_.WriteTo(output, _repeated_filePaths_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += filePaths_.CalculateSize(_repeated_filePaths_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Paths other) {
      if (other == null) {
        return;
      }
      filePaths_.Add(other.filePaths_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            filePaths_.AddEntriesFrom(input, _repeated_filePaths_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Path : pb::IMessage<Path> {
    private static readonly pb::MessageParser<Path> _parser = new pb::MessageParser<Path>(() => new Path());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Path> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Path() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Path(Path other) : this() {
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Path Clone() {
      return new Path(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int Path_FieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path_ {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Path);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Path other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path_ != other.Path_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path_.Length != 0) hash ^= Path_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Path_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Path other) {
      if (other == null) {
        return;
      }
      if (other.Path_.Length != 0) {
        Path_ = other.Path_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class File : pb::IMessage<File> {
    private static readonly pb::MessageParser<File> _parser = new pb::MessageParser<File>(() => new File());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<File> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public File() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public File(File other) : this() {
      filePath_ = other.filePath_ != null ? other.filePath_.Clone() : null;
      bytes_ = other.bytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public File Clone() {
      return new File(this);
    }

    /// <summary>Field number for the "filePath" field.</summary>
    public const int FilePathFieldNumber = 1;
    private global::GRPCService.GRPCProto.Path filePath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GRPCService.GRPCProto.Path FilePath {
      get { return filePath_; }
      set {
        filePath_ = value;
      }
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 2;
    private pb::ByteString bytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bytes {
      get { return bytes_; }
      set {
        bytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as File);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(File other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FilePath, other.FilePath)) return false;
      if (Bytes != other.Bytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (filePath_ != null) hash ^= FilePath.GetHashCode();
      if (Bytes.Length != 0) hash ^= Bytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (filePath_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FilePath);
      }
      if (Bytes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Bytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (filePath_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FilePath);
      }
      if (Bytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(File other) {
      if (other == null) {
        return;
      }
      if (other.filePath_ != null) {
        if (filePath_ == null) {
          filePath_ = new global::GRPCService.GRPCProto.Path();
        }
        FilePath.MergeFrom(other.FilePath);
      }
      if (other.Bytes.Length != 0) {
        Bytes = other.Bytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (filePath_ == null) {
              filePath_ = new global::GRPCService.GRPCProto.Path();
            }
            input.ReadMessage(filePath_);
            break;
          }
          case 18: {
            Bytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PdfFile : pb::IMessage<PdfFile> {
    private static readonly pb::MessageParser<PdfFile> _parser = new pb::MessageParser<PdfFile>(() => new PdfFile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PdfFile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PdfFile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PdfFile(PdfFile other) : this() {
      pages_ = other.pages_.Clone();
      bytes_ = other.bytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PdfFile Clone() {
      return new PdfFile(this);
    }

    /// <summary>Field number for the "pages" field.</summary>
    public const int PagesFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_pages_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> pages_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Pages {
      get { return pages_; }
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 2;
    private pb::ByteString bytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bytes {
      get { return bytes_; }
      set {
        bytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PdfFile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PdfFile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pages_.Equals(other.pages_)) return false;
      if (Bytes != other.Bytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pages_.GetHashCode();
      if (Bytes.Length != 0) hash ^= Bytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pages_.WriteTo(output, _repeated_pages_codec);
      if (Bytes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Bytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pages_.CalculateSize(_repeated_pages_codec);
      if (Bytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PdfFile other) {
      if (other == null) {
        return;
      }
      pages_.Add(other.pages_);
      if (other.Bytes.Length != 0) {
        Bytes = other.Bytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            pages_.AddEntriesFrom(input, _repeated_pages_codec);
            break;
          }
          case 18: {
            Bytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class JobInfo : pb::IMessage<JobInfo> {
    private static readonly pb::MessageParser<JobInfo> _parser = new pb::MessageParser<JobInfo>(() => new JobInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JobInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobInfo(JobInfo other) : this() {
      jobStatus_ = other.jobStatus_;
      jobId_ = other.jobId_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobInfo Clone() {
      return new JobInfo(this);
    }

    /// <summary>Field number for the "JobStatus" field.</summary>
    public const int JobStatusFieldNumber = 1;
    private global::GRPCService.GRPCProto.EnumJobStatus jobStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GRPCService.GRPCProto.EnumJobStatus JobStatus {
      get { return jobStatus_; }
      set {
        jobStatus_ = value;
      }
    }

    /// <summary>Field number for the "JobId" field.</summary>
    public const int JobIdFieldNumber = 2;
    private string jobId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobId {
      get { return jobId_; }
      set {
        jobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JobInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JobInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobStatus != other.JobStatus) return false;
      if (JobId != other.JobId) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JobStatus != 0) hash ^= JobStatus.GetHashCode();
      if (JobId.Length != 0) hash ^= JobId.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JobStatus != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) JobStatus);
      }
      if (JobId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JobId);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JobStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) JobStatus);
      }
      if (JobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobId);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JobInfo other) {
      if (other == null) {
        return;
      }
      if (other.JobStatus != 0) {
        JobStatus = other.JobStatus;
      }
      if (other.JobId.Length != 0) {
        JobId = other.JobId;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            jobStatus_ = (global::GRPCService.GRPCProto.EnumJobStatus) input.ReadEnum();
            break;
          }
          case 18: {
            JobId = input.ReadString();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JobInfoWithBytes : pb::IMessage<JobInfoWithBytes> {
    private static readonly pb::MessageParser<JobInfoWithBytes> _parser = new pb::MessageParser<JobInfoWithBytes>(() => new JobInfoWithBytes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JobInfoWithBytes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobInfoWithBytes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobInfoWithBytes(JobInfoWithBytes other) : this() {
      jobInfo_ = other.jobInfo_ != null ? other.jobInfo_.Clone() : null;
      bytes_ = other.bytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobInfoWithBytes Clone() {
      return new JobInfoWithBytes(this);
    }

    /// <summary>Field number for the "jobInfo" field.</summary>
    public const int JobInfoFieldNumber = 1;
    private global::GRPCService.GRPCProto.JobInfo jobInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GRPCService.GRPCProto.JobInfo JobInfo {
      get { return jobInfo_; }
      set {
        jobInfo_ = value;
      }
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 2;
    private pb::ByteString bytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bytes {
      get { return bytes_; }
      set {
        bytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JobInfoWithBytes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JobInfoWithBytes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(JobInfo, other.JobInfo)) return false;
      if (Bytes != other.Bytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (jobInfo_ != null) hash ^= JobInfo.GetHashCode();
      if (Bytes.Length != 0) hash ^= Bytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (jobInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(JobInfo);
      }
      if (Bytes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Bytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (jobInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JobInfo);
      }
      if (Bytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JobInfoWithBytes other) {
      if (other == null) {
        return;
      }
      if (other.jobInfo_ != null) {
        if (jobInfo_ == null) {
          jobInfo_ = new global::GRPCService.GRPCProto.JobInfo();
        }
        JobInfo.MergeFrom(other.JobInfo);
      }
      if (other.Bytes.Length != 0) {
        Bytes = other.Bytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (jobInfo_ == null) {
              jobInfo_ = new global::GRPCService.GRPCProto.JobInfo();
            }
            input.ReadMessage(jobInfo_);
            break;
          }
          case 18: {
            Bytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FileInfo : pb::IMessage<FileInfo> {
    private static readonly pb::MessageParser<FileInfo> _parser = new pb::MessageParser<FileInfo>(() => new FileInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileInfo(FileInfo other) : this() {
      fileType_ = other.fileType_;
      mD5_ = other.mD5_;
      fileLength_ = other.fileLength_;
      path_ = other.path_;
      jobId_ = other.jobId_;
      pageNo_ = other.pageNo_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileInfo Clone() {
      return new FileInfo(this);
    }

    /// <summary>Field number for the "fileType" field.</summary>
    public const int FileTypeFieldNumber = 1;
    private global::GRPCService.GRPCProto.EnumFileType fileType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GRPCService.GRPCProto.EnumFileType FileType {
      get { return fileType_; }
      set {
        fileType_ = value;
      }
    }

    /// <summary>Field number for the "MD5" field.</summary>
    public const int MD5FieldNumber = 2;
    private string mD5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MD5 {
      get { return mD5_; }
      set {
        mD5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FileLength" field.</summary>
    public const int FileLengthFieldNumber = 3;
    private long fileLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FileLength {
      get { return fileLength_; }
      set {
        fileLength_ = value;
      }
    }

    /// <summary>Field number for the "Path" field.</summary>
    public const int PathFieldNumber = 4;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "JobId" field.</summary>
    public const int JobIdFieldNumber = 5;
    private string jobId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobId {
      get { return jobId_; }
      set {
        jobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PageNo" field.</summary>
    public const int PageNoFieldNumber = 6;
    private long pageNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageNo {
      get { return pageNo_; }
      set {
        pageNo_ = value;
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 7;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileType != other.FileType) return false;
      if (MD5 != other.MD5) return false;
      if (FileLength != other.FileLength) return false;
      if (Path != other.Path) return false;
      if (JobId != other.JobId) return false;
      if (PageNo != other.PageNo) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FileType != 0) hash ^= FileType.GetHashCode();
      if (MD5.Length != 0) hash ^= MD5.GetHashCode();
      if (FileLength != 0L) hash ^= FileLength.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (JobId.Length != 0) hash ^= JobId.GetHashCode();
      if (PageNo != 0L) hash ^= PageNo.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FileType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) FileType);
      }
      if (MD5.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MD5);
      }
      if (FileLength != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FileLength);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Path);
      }
      if (JobId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(JobId);
      }
      if (PageNo != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(PageNo);
      }
      if (Id != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FileType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FileType);
      }
      if (MD5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MD5);
      }
      if (FileLength != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FileLength);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (JobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobId);
      }
      if (PageNo != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageNo);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileInfo other) {
      if (other == null) {
        return;
      }
      if (other.FileType != 0) {
        FileType = other.FileType;
      }
      if (other.MD5.Length != 0) {
        MD5 = other.MD5;
      }
      if (other.FileLength != 0L) {
        FileLength = other.FileLength;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.JobId.Length != 0) {
        JobId = other.JobId;
      }
      if (other.PageNo != 0L) {
        PageNo = other.PageNo;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            fileType_ = (global::GRPCService.GRPCProto.EnumFileType) input.ReadEnum();
            break;
          }
          case 18: {
            MD5 = input.ReadString();
            break;
          }
          case 24: {
            FileLength = input.ReadInt64();
            break;
          }
          case 34: {
            Path = input.ReadString();
            break;
          }
          case 42: {
            JobId = input.ReadString();
            break;
          }
          case 48: {
            PageNo = input.ReadInt64();
            break;
          }
          case 56: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommonResponse : pb::IMessage<CommonResponse> {
    private static readonly pb::MessageParser<CommonResponse> _parser = new pb::MessageParser<CommonResponse>(() => new CommonResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommonResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonResponse(CommonResponse other) : this() {
      isError_ = other.isError_;
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonResponse Clone() {
      return new CommonResponse(this);
    }

    /// <summary>Field number for the "isError" field.</summary>
    public const int IsErrorFieldNumber = 1;
    private bool isError_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsError {
      get { return isError_; }
      set {
        isError_ = value;
      }
    }

    /// <summary>Field number for the "ErrorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 2;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommonResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommonResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsError != other.IsError) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsError != false) hash ^= IsError.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsError != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsError);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsError != false) {
        size += 1 + 1;
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommonResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsError != false) {
        IsError = other.IsError;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsError = input.ReadBool();
            break;
          }
          case 18: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatabaseCreateFileInfoResponse : pb::IMessage<DatabaseCreateFileInfoResponse> {
    private static readonly pb::MessageParser<DatabaseCreateFileInfoResponse> _parser = new pb::MessageParser<DatabaseCreateFileInfoResponse>(() => new DatabaseCreateFileInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatabaseCreateFileInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabaseCreateFileInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabaseCreateFileInfoResponse(DatabaseCreateFileInfoResponse other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      fileId_ = other.fileId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabaseCreateFileInfoResponse Clone() {
      return new DatabaseCreateFileInfoResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::GRPCService.GRPCProto.CommonResponse error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GRPCService.GRPCProto.CommonResponse Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "fileId" field.</summary>
    public const int FileIdFieldNumber = 2;
    private string fileId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileId {
      get { return fileId_; }
      set {
        fileId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatabaseCreateFileInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatabaseCreateFileInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (FileId != other.FileId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (FileId.Length != 0) hash ^= FileId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (FileId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (FileId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatabaseCreateFileInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::GRPCService.GRPCProto.CommonResponse();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.FileId.Length != 0) {
        FileId = other.FileId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::GRPCService.GRPCProto.CommonResponse();
            }
            input.ReadMessage(error_);
            break;
          }
          case 18: {
            FileId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImagesInfo : pb::IMessage<ImagesInfo> {
    private static readonly pb::MessageParser<ImagesInfo> _parser = new pb::MessageParser<ImagesInfo>(() => new ImagesInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImagesInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImagesInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImagesInfo(ImagesInfo other) : this() {
      jobId_ = other.jobId_;
      firstPageNo_ = other.firstPageNo_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImagesInfo Clone() {
      return new ImagesInfo(this);
    }

    /// <summary>Field number for the "JobId" field.</summary>
    public const int JobIdFieldNumber = 1;
    private string jobId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobId {
      get { return jobId_; }
      set {
        jobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FirstPageNo" field.</summary>
    public const int FirstPageNoFieldNumber = 2;
    private long firstPageNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FirstPageNo {
      get { return firstPageNo_; }
      set {
        firstPageNo_ = value;
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 3;
    private long count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImagesInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImagesInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobId != other.JobId) return false;
      if (FirstPageNo != other.FirstPageNo) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JobId.Length != 0) hash ^= JobId.GetHashCode();
      if (FirstPageNo != 0L) hash ^= FirstPageNo.GetHashCode();
      if (Count != 0L) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JobId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JobId);
      }
      if (FirstPageNo != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FirstPageNo);
      }
      if (Count != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobId);
      }
      if (FirstPageNo != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FirstPageNo);
      }
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImagesInfo other) {
      if (other == null) {
        return;
      }
      if (other.JobId.Length != 0) {
        JobId = other.JobId;
      }
      if (other.FirstPageNo != 0L) {
        FirstPageNo = other.FirstPageNo;
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            JobId = input.ReadString();
            break;
          }
          case 16: {
            FirstPageNo = input.ReadInt64();
            break;
          }
          case 24: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RejectJob : pb::IMessage<RejectJob> {
    private static readonly pb::MessageParser<RejectJob> _parser = new pb::MessageParser<RejectJob>(() => new RejectJob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RejectJob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RejectJob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RejectJob(RejectJob other) : this() {
      jobId_ = other.jobId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RejectJob Clone() {
      return new RejectJob(this);
    }

    /// <summary>Field number for the "JobId" field.</summary>
    public const int JobIdFieldNumber = 1;
    private string jobId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobId {
      get { return jobId_; }
      set {
        jobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RejectJob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RejectJob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobId != other.JobId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JobId.Length != 0) hash ^= JobId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JobId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JobId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RejectJob other) {
      if (other == null) {
        return;
      }
      if (other.JobId.Length != 0) {
        JobId = other.JobId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            JobId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DoneJob : pb::IMessage<DoneJob> {
    private static readonly pb::MessageParser<DoneJob> _parser = new pb::MessageParser<DoneJob>(() => new DoneJob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DoneJob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoneJob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoneJob(DoneJob other) : this() {
      jobId_ = other.jobId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoneJob Clone() {
      return new DoneJob(this);
    }

    /// <summary>Field number for the "JobId" field.</summary>
    public const int JobIdFieldNumber = 1;
    private string jobId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobId {
      get { return jobId_; }
      set {
        jobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DoneJob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DoneJob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobId != other.JobId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JobId.Length != 0) hash ^= JobId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JobId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JobId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DoneJob other) {
      if (other == null) {
        return;
      }
      if (other.JobId.Length != 0) {
        JobId = other.JobId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            JobId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
