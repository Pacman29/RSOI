// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: services.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GRPCService.GRPCProto {
  public static partial class DataBase
  {
    static readonly string __ServiceName = "GRPCProto.DataBase";

    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.PdfFileInfo> __Marshaller_GRPCProto_PdfFileInfo = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.PdfFileInfo.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.Empty> __Marshaller_GRPCProto_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.RejectJob> __Marshaller_GRPCProto_RejectJob = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.RejectJob.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.DoneJob> __Marshaller_GRPCProto_DoneJob = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.DoneJob.Parser.ParseFrom);

    static readonly grpc::Method<global::GRPCService.GRPCProto.PdfFileInfo, global::GRPCService.GRPCProto.Empty> __Method_SavePdfFileInfo = new grpc::Method<global::GRPCService.GRPCProto.PdfFileInfo, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SavePdfFileInfo",
        __Marshaller_GRPCProto_PdfFileInfo,
        __Marshaller_GRPCProto_Empty);

    static readonly grpc::Method<global::GRPCService.GRPCProto.RejectJob, global::GRPCService.GRPCProto.Empty> __Method_RejectJobCall = new grpc::Method<global::GRPCService.GRPCProto.RejectJob, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RejectJobCall",
        __Marshaller_GRPCProto_RejectJob,
        __Marshaller_GRPCProto_Empty);

    static readonly grpc::Method<global::GRPCService.GRPCProto.DoneJob, global::GRPCService.GRPCProto.Empty> __Method_DoneJobCall = new grpc::Method<global::GRPCService.GRPCProto.DoneJob, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DoneJobCall",
        __Marshaller_GRPCProto_DoneJob,
        __Marshaller_GRPCProto_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DataBase</summary>
    public abstract partial class DataBaseBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> SavePdfFileInfo(global::GRPCService.GRPCProto.PdfFileInfo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> RejectJobCall(global::GRPCService.GRPCProto.RejectJob request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> DoneJobCall(global::GRPCService.GRPCProto.DoneJob request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DataBase</summary>
    public partial class DataBaseClient : grpc::ClientBase<DataBaseClient>
    {
      /// <summary>Creates a new client for DataBase</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DataBaseClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DataBase that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DataBaseClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DataBaseClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DataBaseClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GRPCService.GRPCProto.Empty SavePdfFileInfo(global::GRPCService.GRPCProto.PdfFileInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SavePdfFileInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty SavePdfFileInfo(global::GRPCService.GRPCProto.PdfFileInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SavePdfFileInfo, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> SavePdfFileInfoAsync(global::GRPCService.GRPCProto.PdfFileInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SavePdfFileInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> SavePdfFileInfoAsync(global::GRPCService.GRPCProto.PdfFileInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SavePdfFileInfo, null, options, request);
      }
      public virtual global::GRPCService.GRPCProto.Empty RejectJobCall(global::GRPCService.GRPCProto.RejectJob request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RejectJobCall(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty RejectJobCall(global::GRPCService.GRPCProto.RejectJob request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RejectJobCall, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> RejectJobCallAsync(global::GRPCService.GRPCProto.RejectJob request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RejectJobCallAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> RejectJobCallAsync(global::GRPCService.GRPCProto.RejectJob request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RejectJobCall, null, options, request);
      }
      public virtual global::GRPCService.GRPCProto.Empty DoneJobCall(global::GRPCService.GRPCProto.DoneJob request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DoneJobCall(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty DoneJobCall(global::GRPCService.GRPCProto.DoneJob request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DoneJobCall, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> DoneJobCallAsync(global::GRPCService.GRPCProto.DoneJob request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DoneJobCallAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> DoneJobCallAsync(global::GRPCService.GRPCProto.DoneJob request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DoneJobCall, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DataBaseClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DataBaseClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(DataBaseBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SavePdfFileInfo, serviceImpl.SavePdfFileInfo)
          .AddMethod(__Method_RejectJobCall, serviceImpl.RejectJobCall)
          .AddMethod(__Method_DoneJobCall, serviceImpl.DoneJobCall).Build();
    }

  }
  public static partial class RecognizeService
  {
    static readonly string __ServiceName = "GRPCProto.RecognizeService";

    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.PdfFile> __Marshaller_GRPCProto_PdfFile = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.PdfFile.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.Empty> __Marshaller_GRPCProto_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.RejectJob> __Marshaller_GRPCProto_RejectJob = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.RejectJob.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.DoneJob> __Marshaller_GRPCProto_DoneJob = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.DoneJob.Parser.ParseFrom);

    static readonly grpc::Method<global::GRPCService.GRPCProto.PdfFile, global::GRPCService.GRPCProto.Empty> __Method_RecognizePdf = new grpc::Method<global::GRPCService.GRPCProto.PdfFile, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "RecognizePdf",
        __Marshaller_GRPCProto_PdfFile,
        __Marshaller_GRPCProto_Empty);

    static readonly grpc::Method<global::GRPCService.GRPCProto.RejectJob, global::GRPCService.GRPCProto.Empty> __Method_RejectJobCall = new grpc::Method<global::GRPCService.GRPCProto.RejectJob, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RejectJobCall",
        __Marshaller_GRPCProto_RejectJob,
        __Marshaller_GRPCProto_Empty);

    static readonly grpc::Method<global::GRPCService.GRPCProto.DoneJob, global::GRPCService.GRPCProto.Empty> __Method_DoneJobCall = new grpc::Method<global::GRPCService.GRPCProto.DoneJob, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DoneJobCall",
        __Marshaller_GRPCProto_DoneJob,
        __Marshaller_GRPCProto_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of RecognizeService</summary>
    public abstract partial class RecognizeServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> RecognizePdf(grpc::IAsyncStreamReader<global::GRPCService.GRPCProto.PdfFile> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> RejectJobCall(global::GRPCService.GRPCProto.RejectJob request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> DoneJobCall(global::GRPCService.GRPCProto.DoneJob request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for RecognizeService</summary>
    public partial class RecognizeServiceClient : grpc::ClientBase<RecognizeServiceClient>
    {
      /// <summary>Creates a new client for RecognizeService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public RecognizeServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for RecognizeService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public RecognizeServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected RecognizeServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected RecognizeServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual grpc::AsyncClientStreamingCall<global::GRPCService.GRPCProto.PdfFile, global::GRPCService.GRPCProto.Empty> RecognizePdf(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RecognizePdf(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncClientStreamingCall<global::GRPCService.GRPCProto.PdfFile, global::GRPCService.GRPCProto.Empty> RecognizePdf(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_RecognizePdf, null, options);
      }
      public virtual global::GRPCService.GRPCProto.Empty RejectJobCall(global::GRPCService.GRPCProto.RejectJob request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RejectJobCall(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty RejectJobCall(global::GRPCService.GRPCProto.RejectJob request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RejectJobCall, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> RejectJobCallAsync(global::GRPCService.GRPCProto.RejectJob request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RejectJobCallAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> RejectJobCallAsync(global::GRPCService.GRPCProto.RejectJob request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RejectJobCall, null, options, request);
      }
      public virtual global::GRPCService.GRPCProto.Empty DoneJobCall(global::GRPCService.GRPCProto.DoneJob request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DoneJobCall(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty DoneJobCall(global::GRPCService.GRPCProto.DoneJob request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DoneJobCall, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> DoneJobCallAsync(global::GRPCService.GRPCProto.DoneJob request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DoneJobCallAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> DoneJobCallAsync(global::GRPCService.GRPCProto.DoneJob request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DoneJobCall, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override RecognizeServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new RecognizeServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(RecognizeServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_RecognizePdf, serviceImpl.RecognizePdf)
          .AddMethod(__Method_RejectJobCall, serviceImpl.RejectJobCall)
          .AddMethod(__Method_DoneJobCall, serviceImpl.DoneJobCall).Build();
    }

  }
  public static partial class GateWay
  {
    static readonly string __ServiceName = "GRPCProto.GateWay";

    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.JobInfo> __Marshaller_GRPCProto_JobInfo = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.JobInfo.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.Empty> __Marshaller_GRPCProto_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.Empty.Parser.ParseFrom);

    static readonly grpc::Method<global::GRPCService.GRPCProto.JobInfo, global::GRPCService.GRPCProto.Empty> __Method_PostJobInfo = new grpc::Method<global::GRPCService.GRPCProto.JobInfo, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostJobInfo",
        __Marshaller_GRPCProto_JobInfo,
        __Marshaller_GRPCProto_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.Services[2]; }
    }

    /// <summary>Base class for server-side implementations of GateWay</summary>
    public abstract partial class GateWayBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> PostJobInfo(global::GRPCService.GRPCProto.JobInfo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GateWay</summary>
    public partial class GateWayClient : grpc::ClientBase<GateWayClient>
    {
      /// <summary>Creates a new client for GateWay</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public GateWayClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GateWay that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public GateWayClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected GateWayClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected GateWayClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GRPCService.GRPCProto.Empty PostJobInfo(global::GRPCService.GRPCProto.JobInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostJobInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty PostJobInfo(global::GRPCService.GRPCProto.JobInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PostJobInfo, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> PostJobInfoAsync(global::GRPCService.GRPCProto.JobInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostJobInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> PostJobInfoAsync(global::GRPCService.GRPCProto.JobInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PostJobInfo, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override GateWayClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GateWayClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GateWayBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_PostJobInfo, serviceImpl.PostJobInfo).Build();
    }

  }
}
#endregion
