// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: services.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GRPCService.GRPCProto {
  public static partial class DataBase
  {
    static readonly string __ServiceName = "GRPCProto.DataBase";

    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.PdfFileInfo> __Marshaller_GRPCProto_PdfFileInfo = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.PdfFileInfo.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.Empty> __Marshaller_GRPCProto_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.RejectJob> __Marshaller_GRPCProto_RejectJob = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.RejectJob.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.DoneJob> __Marshaller_GRPCProto_DoneJob = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.DoneJob.Parser.ParseFrom);

    static readonly grpc::Method<global::GRPCService.GRPCProto.PdfFileInfo, global::GRPCService.GRPCProto.Empty> __Method_SavePdfFileInfo = new grpc::Method<global::GRPCService.GRPCProto.PdfFileInfo, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SavePdfFileInfo",
        __Marshaller_GRPCProto_PdfFileInfo,
        __Marshaller_GRPCProto_Empty);

    static readonly grpc::Method<global::GRPCService.GRPCProto.RejectJob, global::GRPCService.GRPCProto.Empty> __Method_RejectJobCall = new grpc::Method<global::GRPCService.GRPCProto.RejectJob, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RejectJobCall",
        __Marshaller_GRPCProto_RejectJob,
        __Marshaller_GRPCProto_Empty);

    static readonly grpc::Method<global::GRPCService.GRPCProto.DoneJob, global::GRPCService.GRPCProto.Empty> __Method_DoneJobCall = new grpc::Method<global::GRPCService.GRPCProto.DoneJob, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DoneJobCall",
        __Marshaller_GRPCProto_DoneJob,
        __Marshaller_GRPCProto_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DataBase</summary>
    public abstract partial class DataBaseBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> SavePdfFileInfo(global::GRPCService.GRPCProto.PdfFileInfo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> RejectJobCall(global::GRPCService.GRPCProto.RejectJob request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> DoneJobCall(global::GRPCService.GRPCProto.DoneJob request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DataBase</summary>
    public partial class DataBaseClient : grpc::ClientBase<DataBaseClient>
    {
      /// <summary>Creates a new client for DataBase</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DataBaseClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DataBase that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DataBaseClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DataBaseClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DataBaseClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GRPCService.GRPCProto.Empty SavePdfFileInfo(global::GRPCService.GRPCProto.PdfFileInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SavePdfFileInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty SavePdfFileInfo(global::GRPCService.GRPCProto.PdfFileInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SavePdfFileInfo, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> SavePdfFileInfoAsync(global::GRPCService.GRPCProto.PdfFileInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SavePdfFileInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> SavePdfFileInfoAsync(global::GRPCService.GRPCProto.PdfFileInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SavePdfFileInfo, null, options, request);
      }
      public virtual global::GRPCService.GRPCProto.Empty RejectJobCall(global::GRPCService.GRPCProto.RejectJob request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RejectJobCall(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty RejectJobCall(global::GRPCService.GRPCProto.RejectJob request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RejectJobCall, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> RejectJobCallAsync(global::GRPCService.GRPCProto.RejectJob request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RejectJobCallAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> RejectJobCallAsync(global::GRPCService.GRPCProto.RejectJob request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RejectJobCall, null, options, request);
      }
      public virtual global::GRPCService.GRPCProto.Empty DoneJobCall(global::GRPCService.GRPCProto.DoneJob request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DoneJobCall(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty DoneJobCall(global::GRPCService.GRPCProto.DoneJob request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DoneJobCall, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> DoneJobCallAsync(global::GRPCService.GRPCProto.DoneJob request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DoneJobCallAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> DoneJobCallAsync(global::GRPCService.GRPCProto.DoneJob request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DoneJobCall, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DataBaseClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DataBaseClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(DataBaseBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SavePdfFileInfo, serviceImpl.SavePdfFileInfo)
          .AddMethod(__Method_RejectJobCall, serviceImpl.RejectJobCall)
          .AddMethod(__Method_DoneJobCall, serviceImpl.DoneJobCall).Build();
    }

  }
  public static partial class Recognize
  {
    static readonly string __ServiceName = "GRPCProto.Recognize";

    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.PdfFile> __Marshaller_GRPCProto_PdfFile = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.PdfFile.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.Empty> __Marshaller_GRPCProto_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.RejectJob> __Marshaller_GRPCProto_RejectJob = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.RejectJob.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.DoneJob> __Marshaller_GRPCProto_DoneJob = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.DoneJob.Parser.ParseFrom);

    static readonly grpc::Method<global::GRPCService.GRPCProto.PdfFile, global::GRPCService.GRPCProto.Empty> __Method_RecognizePdf = new grpc::Method<global::GRPCService.GRPCProto.PdfFile, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RecognizePdf",
        __Marshaller_GRPCProto_PdfFile,
        __Marshaller_GRPCProto_Empty);

    static readonly grpc::Method<global::GRPCService.GRPCProto.RejectJob, global::GRPCService.GRPCProto.Empty> __Method_RejectJobCall = new grpc::Method<global::GRPCService.GRPCProto.RejectJob, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RejectJobCall",
        __Marshaller_GRPCProto_RejectJob,
        __Marshaller_GRPCProto_Empty);

    static readonly grpc::Method<global::GRPCService.GRPCProto.DoneJob, global::GRPCService.GRPCProto.Empty> __Method_DoneJobCall = new grpc::Method<global::GRPCService.GRPCProto.DoneJob, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DoneJobCall",
        __Marshaller_GRPCProto_DoneJob,
        __Marshaller_GRPCProto_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of Recognize</summary>
    public abstract partial class RecognizeBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> RecognizePdf(global::GRPCService.GRPCProto.PdfFile request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> RejectJobCall(global::GRPCService.GRPCProto.RejectJob request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> DoneJobCall(global::GRPCService.GRPCProto.DoneJob request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Recognize</summary>
    public partial class RecognizeClient : grpc::ClientBase<RecognizeClient>
    {
      /// <summary>Creates a new client for Recognize</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public RecognizeClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Recognize that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public RecognizeClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected RecognizeClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected RecognizeClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GRPCService.GRPCProto.Empty RecognizePdf(global::GRPCService.GRPCProto.PdfFile request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RecognizePdf(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty RecognizePdf(global::GRPCService.GRPCProto.PdfFile request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RecognizePdf, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> RecognizePdfAsync(global::GRPCService.GRPCProto.PdfFile request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RecognizePdfAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> RecognizePdfAsync(global::GRPCService.GRPCProto.PdfFile request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RecognizePdf, null, options, request);
      }
      public virtual global::GRPCService.GRPCProto.Empty RejectJobCall(global::GRPCService.GRPCProto.RejectJob request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RejectJobCall(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty RejectJobCall(global::GRPCService.GRPCProto.RejectJob request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RejectJobCall, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> RejectJobCallAsync(global::GRPCService.GRPCProto.RejectJob request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RejectJobCallAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> RejectJobCallAsync(global::GRPCService.GRPCProto.RejectJob request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RejectJobCall, null, options, request);
      }
      public virtual global::GRPCService.GRPCProto.Empty DoneJobCall(global::GRPCService.GRPCProto.DoneJob request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DoneJobCall(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty DoneJobCall(global::GRPCService.GRPCProto.DoneJob request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DoneJobCall, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> DoneJobCallAsync(global::GRPCService.GRPCProto.DoneJob request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DoneJobCallAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> DoneJobCallAsync(global::GRPCService.GRPCProto.DoneJob request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DoneJobCall, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override RecognizeClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new RecognizeClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(RecognizeBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_RecognizePdf, serviceImpl.RecognizePdf)
          .AddMethod(__Method_RejectJobCall, serviceImpl.RejectJobCall)
          .AddMethod(__Method_DoneJobCall, serviceImpl.DoneJobCall).Build();
    }

  }
  public static partial class FileServer
  {
    static readonly string __ServiceName = "GRPCProto.FileServer";

    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.File> __Marshaller_GRPCProto_File = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.File.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.Empty> __Marshaller_GRPCProto_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.Path> __Marshaller_GRPCProto_Path = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.Path.Parser.ParseFrom);

    static readonly grpc::Method<global::GRPCService.GRPCProto.File, global::GRPCService.GRPCProto.Empty> __Method_SaveFile = new grpc::Method<global::GRPCService.GRPCProto.File, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SaveFile",
        __Marshaller_GRPCProto_File,
        __Marshaller_GRPCProto_Empty);

    static readonly grpc::Method<global::GRPCService.GRPCProto.Path, global::GRPCService.GRPCProto.Empty> __Method_GetFile = new grpc::Method<global::GRPCService.GRPCProto.Path, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFile",
        __Marshaller_GRPCProto_Path,
        __Marshaller_GRPCProto_Empty);

    static readonly grpc::Method<global::GRPCService.GRPCProto.Path, global::GRPCService.GRPCProto.Empty> __Method_DeleteFile = new grpc::Method<global::GRPCService.GRPCProto.Path, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteFile",
        __Marshaller_GRPCProto_Path,
        __Marshaller_GRPCProto_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.Services[2]; }
    }

    /// <summary>Base class for server-side implementations of FileServer</summary>
    public abstract partial class FileServerBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> SaveFile(global::GRPCService.GRPCProto.File request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> GetFile(global::GRPCService.GRPCProto.Path request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> DeleteFile(global::GRPCService.GRPCProto.Path request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for FileServer</summary>
    public partial class FileServerClient : grpc::ClientBase<FileServerClient>
    {
      /// <summary>Creates a new client for FileServer</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public FileServerClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for FileServer that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public FileServerClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected FileServerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected FileServerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GRPCService.GRPCProto.Empty SaveFile(global::GRPCService.GRPCProto.File request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SaveFile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty SaveFile(global::GRPCService.GRPCProto.File request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SaveFile, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> SaveFileAsync(global::GRPCService.GRPCProto.File request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SaveFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> SaveFileAsync(global::GRPCService.GRPCProto.File request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SaveFile, null, options, request);
      }
      public virtual global::GRPCService.GRPCProto.Empty GetFile(global::GRPCService.GRPCProto.Path request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty GetFile(global::GRPCService.GRPCProto.Path request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFile, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> GetFileAsync(global::GRPCService.GRPCProto.Path request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> GetFileAsync(global::GRPCService.GRPCProto.Path request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFile, null, options, request);
      }
      public virtual global::GRPCService.GRPCProto.Empty DeleteFile(global::GRPCService.GRPCProto.Path request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty DeleteFile(global::GRPCService.GRPCProto.Path request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteFile, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> DeleteFileAsync(global::GRPCService.GRPCProto.Path request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> DeleteFileAsync(global::GRPCService.GRPCProto.Path request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteFile, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override FileServerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new FileServerClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(FileServerBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SaveFile, serviceImpl.SaveFile)
          .AddMethod(__Method_GetFile, serviceImpl.GetFile)
          .AddMethod(__Method_DeleteFile, serviceImpl.DeleteFile).Build();
    }

  }
  public static partial class GateWay
  {
    static readonly string __ServiceName = "GRPCProto.GateWay";

    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.JobInfo> __Marshaller_GRPCProto_JobInfo = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.JobInfo.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.Empty> __Marshaller_GRPCProto_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCService.GRPCProto.JobInfoWithBytes> __Marshaller_GRPCProto_JobInfoWithBytes = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCService.GRPCProto.JobInfoWithBytes.Parser.ParseFrom);

    static readonly grpc::Method<global::GRPCService.GRPCProto.JobInfo, global::GRPCService.GRPCProto.Empty> __Method_PostJobInfo = new grpc::Method<global::GRPCService.GRPCProto.JobInfo, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostJobInfo",
        __Marshaller_GRPCProto_JobInfo,
        __Marshaller_GRPCProto_Empty);

    static readonly grpc::Method<global::GRPCService.GRPCProto.JobInfoWithBytes, global::GRPCService.GRPCProto.Empty> __Method_PostJobInfoWithBytes = new grpc::Method<global::GRPCService.GRPCProto.JobInfoWithBytes, global::GRPCService.GRPCProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostJobInfoWithBytes",
        __Marshaller_GRPCProto_JobInfoWithBytes,
        __Marshaller_GRPCProto_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GRPCService.GRPCProto.ServicesReflection.Descriptor.Services[3]; }
    }

    /// <summary>Base class for server-side implementations of GateWay</summary>
    public abstract partial class GateWayBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> PostJobInfo(global::GRPCService.GRPCProto.JobInfo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GRPCService.GRPCProto.Empty> PostJobInfoWithBytes(global::GRPCService.GRPCProto.JobInfoWithBytes request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GateWay</summary>
    public partial class GateWayClient : grpc::ClientBase<GateWayClient>
    {
      /// <summary>Creates a new client for GateWay</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public GateWayClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GateWay that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public GateWayClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected GateWayClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected GateWayClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GRPCService.GRPCProto.Empty PostJobInfo(global::GRPCService.GRPCProto.JobInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostJobInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty PostJobInfo(global::GRPCService.GRPCProto.JobInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PostJobInfo, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> PostJobInfoAsync(global::GRPCService.GRPCProto.JobInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostJobInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> PostJobInfoAsync(global::GRPCService.GRPCProto.JobInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PostJobInfo, null, options, request);
      }
      public virtual global::GRPCService.GRPCProto.Empty PostJobInfoWithBytes(global::GRPCService.GRPCProto.JobInfoWithBytes request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostJobInfoWithBytes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCService.GRPCProto.Empty PostJobInfoWithBytes(global::GRPCService.GRPCProto.JobInfoWithBytes request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PostJobInfoWithBytes, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> PostJobInfoWithBytesAsync(global::GRPCService.GRPCProto.JobInfoWithBytes request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostJobInfoWithBytesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCService.GRPCProto.Empty> PostJobInfoWithBytesAsync(global::GRPCService.GRPCProto.JobInfoWithBytes request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PostJobInfoWithBytes, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override GateWayClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GateWayClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GateWayBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_PostJobInfo, serviceImpl.PostJobInfo)
          .AddMethod(__Method_PostJobInfoWithBytes, serviceImpl.PostJobInfoWithBytes).Build();
    }

  }
}
#endregion
